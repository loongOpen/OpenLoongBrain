#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.20.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from openloong import openloong
from openloong.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  void t_skill_home(i32 hand, double check_timer)')
    print('  void t_skill_move(double x, double y, double z, double rx, double ry, double rz, i32 hand, double check_timer)')
    print('  void t_skill_move_dir(string dir_pos, i32 hand, double check_timer)')
    print('  void t_skill_move_inc(double x, double y, double z, i32 hand, double check_timer)')
    print('  void t_skill_cap_control(double cap_value, i32 hand)')
    print('  void t_skill_grasp_bias_set(double x, double y, double z, i32 hand)')
    print('  void t_skill_grasp_bias_inc(double x, double y, double z, i32 hand)')
    print('  i32 t_skill_grasp_obj(string obj_name)')
    print('  i32 t_skill_try_grasp(string obj_name)')
    print('  void t_skill_try_grasp_pass(i32 hand)')
    print('  void t_skill_print_word(string string_)')
    print('  i32 t_skill_put_with_obj(string obj_name, double x, double y, double z, i32 hand)')
    print('  Robot t_robot_cb()')
    print('  Env t_enviroment_cb()')
    print('  void t_action_grasp_all(i32 grasp_max_num)')
    print('  void t_action_imitate(string action_name)')
    print('  void t_action_safe()')
    print('  void t_action_sdk()')
    print('  void t_action_grasp_all_beizi(i32 grasp_max_num)')
    print('  void t_action_grasp_all_mianbao(i32 grasp_max_num)')
    print('  void t_action_grasp_all_shuiguo(i32 grasp_max_num)')
    print('  void t_action_grasp_all_zonghe(i32 grasp_max_num)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = openloong.Client(protocol)
transport.open()

if cmd == 't_skill_home':
    if len(args) != 2:
        print('t_skill_home requires 2 args')
        sys.exit(1)
    pp.pprint(client.t_skill_home(eval(args[0]), eval(args[1]),))

elif cmd == 't_skill_move':
    if len(args) != 8:
        print('t_skill_move requires 8 args')
        sys.exit(1)
    pp.pprint(client.t_skill_move(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]), eval(args[5]), eval(args[6]), eval(args[7]),))

elif cmd == 't_skill_move_dir':
    if len(args) != 3:
        print('t_skill_move_dir requires 3 args')
        sys.exit(1)
    pp.pprint(client.t_skill_move_dir(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 't_skill_move_inc':
    if len(args) != 5:
        print('t_skill_move_inc requires 5 args')
        sys.exit(1)
    pp.pprint(client.t_skill_move_inc(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]),))

elif cmd == 't_skill_cap_control':
    if len(args) != 2:
        print('t_skill_cap_control requires 2 args')
        sys.exit(1)
    pp.pprint(client.t_skill_cap_control(eval(args[0]), eval(args[1]),))

elif cmd == 't_skill_grasp_bias_set':
    if len(args) != 4:
        print('t_skill_grasp_bias_set requires 4 args')
        sys.exit(1)
    pp.pprint(client.t_skill_grasp_bias_set(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 't_skill_grasp_bias_inc':
    if len(args) != 4:
        print('t_skill_grasp_bias_inc requires 4 args')
        sys.exit(1)
    pp.pprint(client.t_skill_grasp_bias_inc(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 't_skill_grasp_obj':
    if len(args) != 1:
        print('t_skill_grasp_obj requires 1 args')
        sys.exit(1)
    pp.pprint(client.t_skill_grasp_obj(args[0],))

elif cmd == 't_skill_try_grasp':
    if len(args) != 1:
        print('t_skill_try_grasp requires 1 args')
        sys.exit(1)
    pp.pprint(client.t_skill_try_grasp(args[0],))

elif cmd == 't_skill_try_grasp_pass':
    if len(args) != 1:
        print('t_skill_try_grasp_pass requires 1 args')
        sys.exit(1)
    pp.pprint(client.t_skill_try_grasp_pass(eval(args[0]),))

elif cmd == 't_skill_print_word':
    if len(args) != 1:
        print('t_skill_print_word requires 1 args')
        sys.exit(1)
    pp.pprint(client.t_skill_print_word(args[0],))

elif cmd == 't_skill_put_with_obj':
    if len(args) != 5:
        print('t_skill_put_with_obj requires 5 args')
        sys.exit(1)
    pp.pprint(client.t_skill_put_with_obj(args[0], eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]),))

elif cmd == 't_robot_cb':
    if len(args) != 0:
        print('t_robot_cb requires 0 args')
        sys.exit(1)
    pp.pprint(client.t_robot_cb())

elif cmd == 't_enviroment_cb':
    if len(args) != 0:
        print('t_enviroment_cb requires 0 args')
        sys.exit(1)
    pp.pprint(client.t_enviroment_cb())

elif cmd == 't_action_grasp_all':
    if len(args) != 1:
        print('t_action_grasp_all requires 1 args')
        sys.exit(1)
    pp.pprint(client.t_action_grasp_all(eval(args[0]),))

elif cmd == 't_action_imitate':
    if len(args) != 1:
        print('t_action_imitate requires 1 args')
        sys.exit(1)
    pp.pprint(client.t_action_imitate(args[0],))

elif cmd == 't_action_safe':
    if len(args) != 0:
        print('t_action_safe requires 0 args')
        sys.exit(1)
    pp.pprint(client.t_action_safe())

elif cmd == 't_action_sdk':
    if len(args) != 0:
        print('t_action_sdk requires 0 args')
        sys.exit(1)
    pp.pprint(client.t_action_sdk())

elif cmd == 't_action_grasp_all_beizi':
    if len(args) != 1:
        print('t_action_grasp_all_beizi requires 1 args')
        sys.exit(1)
    pp.pprint(client.t_action_grasp_all_beizi(eval(args[0]),))

elif cmd == 't_action_grasp_all_mianbao':
    if len(args) != 1:
        print('t_action_grasp_all_mianbao requires 1 args')
        sys.exit(1)
    pp.pprint(client.t_action_grasp_all_mianbao(eval(args[0]),))

elif cmd == 't_action_grasp_all_shuiguo':
    if len(args) != 1:
        print('t_action_grasp_all_shuiguo requires 1 args')
        sys.exit(1)
    pp.pprint(client.t_action_grasp_all_shuiguo(eval(args[0]),))

elif cmd == 't_action_grasp_all_zonghe':
    if len(args) != 1:
        print('t_action_grasp_all_zonghe requires 1 args')
        sys.exit(1)
    pp.pprint(client.t_action_grasp_all_zonghe(eval(args[0]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
